version: '3.8'

services:
    db:
        container_name: mysql
        image: mysql:8.0
        ports:
            - "${MYSQL_PORT}:${MYSQL_PORT}"
        volumes:
            - ./var/mysql:/var/lib/mysql
        environment:
            - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
            - "MYSQL_DATABASE=${MYSQL_DATABASE}"
            - "MYSQL_USER=${MYSQL_USER}"
            - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
    php:
        build:
            context: ./.docker
            dockerfile: Dockerfile
            args:
                UID: "${UID}"
                GID: "${GID}"
        user: "${UID}:${GID}"
        container_name: php
        volumes:
            - .:/var/www/html:cached
        depends_on:
            - db
    nginx:
        image: nginx:1.23.1-alpine
        container_name: nginx
        ports:
            - "${NGINX_PORT}:80"
        volumes:
            - .:/var/www/html:ro
            - ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - php
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
